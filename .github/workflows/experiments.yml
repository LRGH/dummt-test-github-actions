name: Various experiments

on:
  push:
  pull_request:

jobs:
  os-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "ubuntu-latest", "macos-latest"]
        python-version: ["3.10", "pypy2.7", "pypy3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test python version
      run: |
        python -c 'import sys;print(sys.version)'
        python --version
    - name: Test dependencies
      run: |
        python -m pip install pytest pyparsing coverage codecov

  python23:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 2.3
      run: |
        CWD=$(pwd)
        cd ..
        curl -O https://www.python.org/ftp/python/2.3.7/Python-2.3.7.tgz
        tar xzf Python-2.3.7.tgz
        cd Python-2.3.7
        # We need to disable FORTIFY_SOURCE to compile python 2.3
        # cf. https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/286334
        ./configure BASECFLAGS=-U_FORTIFY_SOURCE
        make
        export PATH=$(pwd):$PATH
        cd $CWD
    - name: Test python version
      run: |
        python -c 'import sys;print(sys.version)'
        python --version

  gcc-compilers:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        gcc-version: ["7", "8", "9", "10", "11"]
    env:
      CC: gcc
    steps:
    - uses: actions/checkout@v3
    - name: Set up GCC ${{ matrix.gcc-version }}
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{ matrix.gcc-version }}
        platform: x64
    - name: Test gcc version
      run: |
        $CC --version
    - name: Compile simple program
      run: |
        echo 'int main() { return 0; }' > a.c
        $CC -o a.out a.c
        ./a.out

  gcc-6:
    runs-on: "ubuntu-20.04"
    # does not work on ubuntu-22.04 :-(
    strategy:
      fail-fast: false
    env:
      CC: gcc-6
    steps:
    - uses: actions/checkout@v3
    - name: Set up GCC 6
      run: |
        echo "deb http://dk.archive.ubuntu.com/ubuntu/ bionic main universe" | sudo tee -a /etc/apt/sources.list
        sudo apt update
        sudo apt install g++-6
    - name: Test gcc version
      run: |
        $CC --version
    - name: Compile simple program
      run: |
        echo 'int main() { return 0; }' > a.c
        $CC -o a.out a.c
        ./a.out

  gcc-5:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: false
    env:
      CC: gcc-5
    steps:
    - uses: actions/checkout@v3
    - name: Set up GCC 5
      run: |
        echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main universe" | sudo tee -a /etc/apt/sources.list
        sudo apt update
        sudo apt install g++-5
    - name: Test gcc version
      run: |
        $CC --version
    - name: Compile simple program
      run: |
        echo 'int main() { return 0; }' > a.c
        $CC -o a.out a.c
        ./a.out

  gcc-4-8:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: false
    env:
      CC: gcc-4.8
    steps:
    - uses: actions/checkout@v3
    - name: Download GCC 4.8
      run: |
        sudo apt update
        mkdir install_g++-4.8
        cd install_g++-4.8/
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/g++-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/cpp-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libasan0_4.8.5-4ubuntu8_amd64.deb
        sudo apt install ./gcc-4.8_4.8.5-4ubuntu8_amd64.deb ./gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb ./libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./cpp-4.8_4.8.5-4ubuntu8_amd64.deb ./libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./libasan0_4.8.5-4ubuntu8_amd64.deb ./g++-4.8_4.8.5-4ubuntu8_amd64.deb
    - name: Test gcc version
      run: |
        $CC --version
    - name: Compile simple program
      run: |
        echo 'int main() { return 0; }' > a.c
        $CC -o a.out a.c
        ./a.out
